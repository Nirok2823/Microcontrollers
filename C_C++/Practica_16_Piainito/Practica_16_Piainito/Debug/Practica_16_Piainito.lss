
Practica_16_Piainito.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000254  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  000002c8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000003  00800060  00800060  000002c8  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000002c8  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000002f8  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000070  00000000  00000000  00000334  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000994  00000000  00000000  000003a4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000726  00000000  00000000  00000d38  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000004c0  00000000  00000000  0000145e  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000000f8  00000000  00000000  00001920  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000003fb  00000000  00000000  00001a18  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000294  00000000  00000000  00001e13  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000060  00000000  00000000  000020a7  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
   8:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
   c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  10:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  14:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  18:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  1c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  20:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  24:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  28:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  2c:	0c 94 0f 01 	jmp	0x21e	; 0x21e <__vector_11>
  30:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  34:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  38:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  3c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  40:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  44:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  48:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  4c:	0c 94 1e 01 	jmp	0x23c	; 0x23c <__vector_19>
  50:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_clear_bss>:
  60:	20 e0       	ldi	r18, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	01 c0       	rjmp	.+2      	; 0x6a <.do_clear_bss_start>

00000068 <.do_clear_bss_loop>:
  68:	1d 92       	st	X+, r1

0000006a <.do_clear_bss_start>:
  6a:	a3 36       	cpi	r26, 0x63	; 99
  6c:	b2 07       	cpc	r27, r18
  6e:	e1 f7       	brne	.-8      	; 0x68 <.do_clear_bss_loop>
  70:	0e 94 f3 00 	call	0x1e6	; 0x1e6 <main>
  74:	0c 94 28 01 	jmp	0x250	; 0x250 <_exit>

00000078 <__bad_interrupt>:
  78:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000007c <Usart_init>:
}

uint8_t uno_en_bit(volatile uint8_t *LUGAR, uint8_t BIT)
{
	return (*LUGAR&(1<<BIT));
}
  7c:	90 bd       	out	0x20, r25	; 32
  7e:	89 b9       	out	0x09, r24	; 9
  80:	88 e9       	ldi	r24, 0x98	; 152
  82:	8a b9       	out	0x0a, r24	; 10
  84:	86 e8       	ldi	r24, 0x86	; 134
  86:	80 bd       	out	0x20, r24	; 32
  88:	08 95       	ret

0000008a <cero_en_bit>:
  8a:	fc 01       	movw	r30, r24
  8c:	80 81       	ld	r24, Z
  8e:	90 e0       	ldi	r25, 0x00	; 0
  90:	02 c0       	rjmp	.+4      	; 0x96 <cero_en_bit+0xc>
  92:	95 95       	asr	r25
  94:	87 95       	ror	r24
  96:	6a 95       	dec	r22
  98:	e2 f7       	brpl	.-8      	; 0x92 <cero_en_bit+0x8>
  9a:	f1 e0       	ldi	r31, 0x01	; 1
  9c:	8f 27       	eor	r24, r31
  9e:	81 70       	andi	r24, 0x01	; 1
  a0:	08 95       	ret

000000a2 <Usart_transmit>:
  a2:	cf 93       	push	r28
  a4:	c8 2f       	mov	r28, r24
  a6:	65 e0       	ldi	r22, 0x05	; 5
  a8:	8b e2       	ldi	r24, 0x2B	; 43
  aa:	90 e0       	ldi	r25, 0x00	; 0
  ac:	0e 94 45 00 	call	0x8a	; 0x8a <cero_en_bit>
  b0:	81 11       	cpse	r24, r1
  b2:	f9 cf       	rjmp	.-14     	; 0xa6 <Usart_transmit+0x4>
  b4:	cc b9       	out	0x0c, r28	; 12
  b6:	cf 91       	pop	r28
  b8:	08 95       	ret

000000ba <Traba>:
  ba:	0f 93       	push	r16
  bc:	1f 93       	push	r17
  be:	cf 93       	push	r28
  c0:	8c 01       	movw	r16, r24
  c2:	c6 2f       	mov	r28, r22
  c4:	83 ed       	ldi	r24, 0xD3	; 211
  c6:	90 e3       	ldi	r25, 0x30	; 48
  c8:	01 97       	sbiw	r24, 0x01	; 1
  ca:	f1 f7       	brne	.-4      	; 0xc8 <Traba+0xe>
  cc:	00 c0       	rjmp	.+0      	; 0xce <Traba+0x14>
  ce:	00 00       	nop
  d0:	6c 2f       	mov	r22, r28
  d2:	c8 01       	movw	r24, r16
  d4:	0e 94 45 00 	call	0x8a	; 0x8a <cero_en_bit>
  d8:	81 11       	cpse	r24, r1
  da:	fa cf       	rjmp	.-12     	; 0xd0 <Traba+0x16>
  dc:	83 ed       	ldi	r24, 0xD3	; 211
  de:	90 e3       	ldi	r25, 0x30	; 48
  e0:	01 97       	sbiw	r24, 0x01	; 1
  e2:	f1 f7       	brne	.-4      	; 0xe0 <Traba+0x26>
  e4:	00 c0       	rjmp	.+0      	; 0xe6 <Traba+0x2c>
  e6:	00 00       	nop
  e8:	cf 91       	pop	r28
  ea:	1f 91       	pop	r17
  ec:	0f 91       	pop	r16
  ee:	08 95       	ret

000000f0 <Send>:
  f0:	89 b3       	in	r24, 0x19	; 25
  f2:	8f 3f       	cpi	r24, 0xFF	; 255
  f4:	09 f4       	brne	.+2      	; 0xf8 <Send+0x8>
  f6:	76 c0       	rjmp	.+236    	; 0x1e4 <Send+0xf4>
  f8:	89 b3       	in	r24, 0x19	; 25
  fa:	8f 3e       	cpi	r24, 0xEF	; 239
  fc:	b9 f1       	breq	.+110    	; 0x16c <Send+0x7c>
  fe:	48 f4       	brcc	.+18     	; 0x112 <Send+0x22>
 100:	8f 3b       	cpi	r24, 0xBF	; 191
 102:	09 f4       	brne	.+2      	; 0x106 <Send+0x16>
 104:	45 c0       	rjmp	.+138    	; 0x190 <Send+0xa0>
 106:	8f 3d       	cpi	r24, 0xDF	; 223
 108:	d1 f1       	breq	.+116    	; 0x17e <Send+0x8e>
 10a:	8f 37       	cpi	r24, 0x7F	; 127
 10c:	09 f0       	breq	.+2      	; 0x110 <Send+0x20>
 10e:	4c c0       	rjmp	.+152    	; 0x1a8 <Send+0xb8>
 110:	48 c0       	rjmp	.+144    	; 0x1a2 <Send+0xb2>
 112:	8b 3f       	cpi	r24, 0xFB	; 251
 114:	c9 f0       	breq	.+50     	; 0x148 <Send+0x58>
 116:	18 f4       	brcc	.+6      	; 0x11e <Send+0x2e>
 118:	87 3f       	cpi	r24, 0xF7	; 247
 11a:	f9 f0       	breq	.+62     	; 0x15a <Send+0x6a>
 11c:	45 c0       	rjmp	.+138    	; 0x1a8 <Send+0xb8>
 11e:	8d 3f       	cpi	r24, 0xFD	; 253
 120:	59 f0       	breq	.+22     	; 0x138 <Send+0x48>
 122:	8e 3f       	cpi	r24, 0xFE	; 254
 124:	09 f0       	breq	.+2      	; 0x128 <Send+0x38>
 126:	40 c0       	rjmp	.+128    	; 0x1a8 <Send+0xb8>
 128:	81 e3       	ldi	r24, 0x31	; 49
 12a:	80 93 61 00 	sts	0x0061, r24	; 0x800061 <buttonTrans>
 12e:	87 e3       	ldi	r24, 0x37	; 55
 130:	8c bf       	out	0x3c, r24	; 60
 132:	10 92 62 00 	sts	0x0062, r1	; 0x800062 <bit>
 136:	38 c0       	rjmp	.+112    	; 0x1a8 <Send+0xb8>
 138:	82 e3       	ldi	r24, 0x32	; 50
 13a:	80 93 61 00 	sts	0x0061, r24	; 0x800061 <buttonTrans>
 13e:	8c bf       	out	0x3c, r24	; 60
 140:	81 e0       	ldi	r24, 0x01	; 1
 142:	80 93 62 00 	sts	0x0062, r24	; 0x800062 <bit>
 146:	30 c0       	rjmp	.+96     	; 0x1a8 <Send+0xb8>
 148:	83 e3       	ldi	r24, 0x33	; 51
 14a:	80 93 61 00 	sts	0x0061, r24	; 0x800061 <buttonTrans>
 14e:	8e e2       	ldi	r24, 0x2E	; 46
 150:	8c bf       	out	0x3c, r24	; 60
 152:	82 e0       	ldi	r24, 0x02	; 2
 154:	80 93 62 00 	sts	0x0062, r24	; 0x800062 <bit>
 158:	27 c0       	rjmp	.+78     	; 0x1a8 <Send+0xb8>
 15a:	84 e3       	ldi	r24, 0x34	; 52
 15c:	80 93 61 00 	sts	0x0061, r24	; 0x800061 <buttonTrans>
 160:	8c e2       	ldi	r24, 0x2C	; 44
 162:	8c bf       	out	0x3c, r24	; 60
 164:	83 e0       	ldi	r24, 0x03	; 3
 166:	80 93 62 00 	sts	0x0062, r24	; 0x800062 <bit>
 16a:	1e c0       	rjmp	.+60     	; 0x1a8 <Send+0xb8>
 16c:	85 e3       	ldi	r24, 0x35	; 53
 16e:	80 93 61 00 	sts	0x0061, r24	; 0x800061 <buttonTrans>
 172:	87 e2       	ldi	r24, 0x27	; 39
 174:	8c bf       	out	0x3c, r24	; 60
 176:	84 e0       	ldi	r24, 0x04	; 4
 178:	80 93 62 00 	sts	0x0062, r24	; 0x800062 <bit>
 17c:	15 c0       	rjmp	.+42     	; 0x1a8 <Send+0xb8>
 17e:	86 e3       	ldi	r24, 0x36	; 54
 180:	80 93 61 00 	sts	0x0061, r24	; 0x800061 <buttonTrans>
 184:	83 e2       	ldi	r24, 0x23	; 35
 186:	8c bf       	out	0x3c, r24	; 60
 188:	85 e0       	ldi	r24, 0x05	; 5
 18a:	80 93 62 00 	sts	0x0062, r24	; 0x800062 <bit>
 18e:	0c c0       	rjmp	.+24     	; 0x1a8 <Send+0xb8>
 190:	87 e3       	ldi	r24, 0x37	; 55
 192:	80 93 61 00 	sts	0x0061, r24	; 0x800061 <buttonTrans>
 196:	8f e1       	ldi	r24, 0x1F	; 31
 198:	8c bf       	out	0x3c, r24	; 60
 19a:	86 e0       	ldi	r24, 0x06	; 6
 19c:	80 93 62 00 	sts	0x0062, r24	; 0x800062 <bit>
 1a0:	03 c0       	rjmp	.+6      	; 0x1a8 <Send+0xb8>
 1a2:	89 e4       	ldi	r24, 0x49	; 73
 1a4:	80 93 61 00 	sts	0x0061, r24	; 0x800061 <buttonTrans>
 1a8:	90 91 61 00 	lds	r25, 0x0061	; 0x800061 <buttonTrans>
 1ac:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
 1b0:	98 13       	cpse	r25, r24
 1b2:	0e c0       	rjmp	.+28     	; 0x1d0 <Send+0xe0>
 1b4:	83 b7       	in	r24, 0x33	; 51
 1b6:	8d 5f       	subi	r24, 0xFD	; 253
 1b8:	83 bf       	out	0x33, r24	; 51
 1ba:	60 91 62 00 	lds	r22, 0x0062	; 0x800062 <bit>
 1be:	89 e3       	ldi	r24, 0x39	; 57
 1c0:	90 e0       	ldi	r25, 0x00	; 0
 1c2:	0e 94 5d 00 	call	0xba	; 0xba <Traba>
 1c6:	83 b7       	in	r24, 0x33	; 51
 1c8:	83 50       	subi	r24, 0x03	; 3
 1ca:	83 bf       	out	0x33, r24	; 51
 1cc:	12 be       	out	0x32, r1	; 50
 1ce:	06 c0       	rjmp	.+12     	; 0x1dc <Send+0xec>
 1d0:	60 91 62 00 	lds	r22, 0x0062	; 0x800062 <bit>
 1d4:	89 e3       	ldi	r24, 0x39	; 57
 1d6:	90 e0       	ldi	r25, 0x00	; 0
 1d8:	0e 94 5d 00 	call	0xba	; 0xba <Traba>
 1dc:	80 91 61 00 	lds	r24, 0x0061	; 0x800061 <buttonTrans>
 1e0:	0e 94 51 00 	call	0xa2	; 0xa2 <Usart_transmit>
 1e4:	08 95       	ret

000001e6 <main>:
 1e6:	78 94       	sei
 1e8:	8c e0       	ldi	r24, 0x0C	; 12
 1ea:	90 e0       	ldi	r25, 0x00	; 0
 1ec:	0e 94 3e 00 	call	0x7c	; 0x7c <Usart_init>
 1f0:	8a b3       	in	r24, 0x1a	; 26
 1f2:	8a bb       	out	0x1a, r24	; 26
 1f4:	8b b3       	in	r24, 0x1b	; 27
 1f6:	8f ef       	ldi	r24, 0xFF	; 255
 1f8:	8b bb       	out	0x1b, r24	; 27
 1fa:	97 b3       	in	r25, 0x17	; 23
 1fc:	87 bb       	out	0x17, r24	; 23
 1fe:	88 b3       	in	r24, 0x18	; 24
 200:	88 bb       	out	0x18, r24	; 24
 202:	83 e0       	ldi	r24, 0x03	; 3
 204:	88 bf       	out	0x38, r24	; 56
 206:	82 e0       	ldi	r24, 0x02	; 2
 208:	89 bf       	out	0x39, r24	; 57
 20a:	12 be       	out	0x32, r1	; 50
 20c:	8b e1       	ldi	r24, 0x1B	; 27
 20e:	83 bf       	out	0x33, r24	; 51
 210:	1c be       	out	0x3c, r1	; 60
 212:	83 b7       	in	r24, 0x33	; 51
 214:	83 50       	subi	r24, 0x03	; 3
 216:	83 bf       	out	0x33, r24	; 51
 218:	0e 94 78 00 	call	0xf0	; 0xf0 <Send>
 21c:	fd cf       	rjmp	.-6      	; 0x218 <__EEPROM_REGION_LENGTH__+0x18>

0000021e <__vector_11>:

ISR (USART_RXC_vect) 
{
 21e:	1f 92       	push	r1
 220:	0f 92       	push	r0
 222:	0f b6       	in	r0, 0x3f	; 63
 224:	0f 92       	push	r0
 226:	11 24       	eor	r1, r1
 228:	8f 93       	push	r24
	buttonRec = UDR;
 22a:	8c b1       	in	r24, 0x0c	; 12
 22c:	80 93 60 00 	sts	0x0060, r24	; 0x800060 <__DATA_REGION_ORIGIN__>
}
 230:	8f 91       	pop	r24
 232:	0f 90       	pop	r0
 234:	0f be       	out	0x3f, r0	; 63
 236:	0f 90       	pop	r0
 238:	1f 90       	pop	r1
 23a:	18 95       	reti

0000023c <__vector_19>:

ISR (TIMER0_COMP_vect)
{
 23c:	1f 92       	push	r1
 23e:	0f 92       	push	r0
 240:	0f b6       	in	r0, 0x3f	; 63
 242:	0f 92       	push	r0
 244:	11 24       	eor	r1, r1
	
}
 246:	0f 90       	pop	r0
 248:	0f be       	out	0x3f, r0	; 63
 24a:	0f 90       	pop	r0
 24c:	1f 90       	pop	r1
 24e:	18 95       	reti

00000250 <_exit>:
 250:	f8 94       	cli

00000252 <__stop_program>:
 252:	ff cf       	rjmp	.-2      	; 0x252 <__stop_program>
